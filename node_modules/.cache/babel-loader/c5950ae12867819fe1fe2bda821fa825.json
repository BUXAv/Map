{"ast":null,"code":"import * as echart from \"echarts\";\nimport jsonp from \"jsonp\";\nimport axios from \"axios\";\nimport \"../config/china\";\nexport default {\n  name: \"Echart\",\n  props: {\n    titleText: String,\n    tooltip: String\n  },\n\n  data() {\n    return {\n      E: \"\"\n    };\n  },\n\n  created() {\n    this.option = {\n      title: {\n        text: this.titleText,\n        x: \"center\",\n        textStyle: {\n          color: \"#DC143C\"\n        }\n      },\n      series: [{\n        type: \"map\",\n        map: \"china\",\n        data: [],\n        label: {\n          show: true,\n          color: \"black\",\n          fontSize: 10\n        },\n        zoom: 1.2,\n        itemStyle: {\n          borderColor: \"grey\"\n        },\n        emphasis: {\n          label: {\n            show: true,\n            color: \"#ADFF2F\",\n            fontSize: 12\n          },\n          itemStyle: {\n            areaColor: \"yellow\"\n          }\n        }\n      }],\n      tooltip: {\n        trigger: \"item\",\n        formatter: `地区：{b}<br/>${this.tooltip}：{c}`\n      },\n      visualMap: {\n        type: \"piecewise\",\n        pieces: [{\n          min: 10000\n        }, {\n          min: 1000,\n          max: 9999\n        }, {\n          min: 100,\n          max: 999\n        }, {\n          min: 10,\n          max: 99\n        }, {\n          min: 1,\n          max: 9\n        }, {\n          value: 0\n        }],\n        inRange: {\n          color: [\"#fff\", \"#ffaa85\", \"#660208\"]\n        },\n        itemWidth: 20,\n        itemHeight: 15\n      }\n    };\n  },\n\n  mounted() {\n    this.getData();\n  },\n\n  methods: {\n    getData() {\n      if (this.titleText === \"中国昨日新增新冠肺炎确诊病例\") {\n        axios.post(\"/api\").then(res => {\n          console.log(res);\n          const keyArr = Object.keys(res.data.data.provinceCompare);\n          const co = [];\n\n          for (var i = 0; i < keyArr.length; i++) {\n            co[i] = {\n              name: keyArr[i],\n              value: res.data.data.provinceCompare[keyArr[i]]\n            };\n          }\n\n          const lists = co.map(item => {\n            return {\n              name: item.name,\n              value: item.value.confirmAdd\n            };\n          });\n          this.option.series[0].data = lists;\n          console.log(this.option);\n          this.E = echart.init(this.$refs.echarts);\n          this.E.setOption(this.option);\n        });\n      } else {\n        jsonp(\"http://interface.sina.cn/news/wap/fymap2020_data.d.json?_=1580892522427\", (err, data) => {\n          const lists = data.data.list.map(item => {\n            return {\n              name: item.name,\n              value: item.value\n            };\n          });\n          this.option.series[0].data = lists;\n          this.E = echart.init(this.$refs.echarts);\n          this.E.setOption(this.option);\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAKA;AACA;AACA;AACA;AACA;EACAA,cADA;EAEAC;IACAC,iBADA;IAEAC;EAFA,CAFA;;EAMAC;IACA;MACAC;IADA;EAGA,CAVA;;EAWAC;IACA;MACAC;QACAC,oBADA;QAEAC,WAFA;QAGAC;UACAC;QADA;MAHA,CADA;MAQAC,SACA;QACAC,WADA;QAEAC,YAFA;QAGAV,QAHA;QAIAW;UACAC,UADA;UAEAL,cAFA;UAGAM;QAHA,CAJA;QASAC,SATA;QAUAC;UACAC;QADA,CAVA;QAaAC;UACAN;YACAC,UADA;YAEAL,gBAFA;YAGAM;UAHA,CADA;UAMAE;YACAG;UADA;QANA;MAbA,CADA,CARA;MAkCAnB;QACAoB,eADA;QAEAC;MAFA,CAlCA;MAsCAC;QACAZ,iBADA;QAEAa,SACA;UAAAC;QAAA,CADA,EAEA;UAAAA;UAAAC;QAAA,CAFA,EAGA;UAAAD;UAAAC;QAAA,CAHA,EAIA;UAAAD;UAAAC;QAAA,CAJA,EAKA;UAAAD;UAAAC;QAAA,CALA,EAMA;UAAAC;QAAA,CANA,CAFA;QAUAC;UACAnB;QADA,CAVA;QAaAoB,aAbA;QAcAC;MAdA;IAtCA;EAuDA,CAnEA;;EAoEAC;IACA;EACA,CAtEA;;EAuEAC;IACAC;MACA;QACAC;UACAC;UACA;UACA;;UACA;YACAC;cACAtC,eADA;cAEA6B;YAFA;UAIA;;UACA;YACA;cAAA7B;cAAA6B;YAAA;UACA,CAFA;UAGA;UACAQ;UACA;UACA;QACA,CAjBA;MAkBA,CAnBA,MAmBA;QACAE,MACA,yEADA,EAEA;UAEA;YACA;cACAvC,eADA;cAEA6B;YAFA;UAIA,CALA;UAMA;UACA;UACA;QACA,CAbA;MAeA;IACA;;EAtCA;AAvEA","names":["name","props","titleText","tooltip","data","E","created","title","text","x","textStyle","color","series","type","map","label","show","fontSize","zoom","itemStyle","borderColor","emphasis","areaColor","trigger","formatter","visualMap","pieces","min","max","value","inRange","itemWidth","itemHeight","mounted","methods","getData","axios","console","co","jsonp"],"sourceRoot":"src/components","sources":["Echart.vue"],"sourcesContent":["<template>\r\n  <div ref=\"echarts\" class=\"echart\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as echart from \"echarts\";\r\nimport jsonp from \"jsonp\";\r\nimport axios from \"axios\";\r\nimport \"../config/china\";\r\nexport default {\r\n  name: \"Echart\",\r\n  props: {\r\n    titleText: String,\r\n    tooltip: String,\r\n  },\r\n  data() {\r\n    return {\r\n      E: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.option = {\r\n      title: {\r\n        text: this.titleText,\r\n        x: \"center\",\r\n        textStyle: {\r\n          color: \"#DC143C\",\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          type: \"map\",\r\n          map: \"china\",\r\n          data: [],\r\n          label: {\r\n            show: true,\r\n            color: \"black\",\r\n            fontSize: 10,\r\n          },\r\n          zoom: 1.2,\r\n          itemStyle: {\r\n            borderColor: \"grey\",\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              show: true,\r\n              color: \"#ADFF2F\",\r\n              fontSize: 12,\r\n            },\r\n            itemStyle: {\r\n              areaColor: \"yellow\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n      tooltip: {\r\n        trigger: \"item\",\r\n        formatter: `地区：{b}<br/>${this.tooltip}：{c}`,\r\n      },\r\n      visualMap: {\r\n        type: \"piecewise\",\r\n        pieces: [\r\n          { min: 10000 },\r\n          { min: 1000, max: 9999 },\r\n          { min: 100, max: 999 },\r\n          { min: 10, max: 99 },\r\n          { min: 1, max: 9 },\r\n          { value: 0 },\r\n        ],\r\n        inRange: {\r\n          color: [\"#fff\", \"#ffaa85\", \"#660208\"],\r\n        },\r\n        itemWidth: 20,\r\n        itemHeight: 15,\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getData();\r\n  },\r\n  methods: {\r\n    getData() {\r\n      if (this.titleText === \"中国昨日新增新冠肺炎确诊病例\") {\r\n        axios.post(\"/api\").then((res) => {\r\n          console.log(res);\r\n          const keyArr = Object.keys(res.data.data.provinceCompare);\r\n          const co = [];\r\n          for (var i = 0; i < keyArr.length; i++) {\r\n            co[i] = {\r\n              name: keyArr[i],\r\n              value: res.data.data.provinceCompare[keyArr[i]],\r\n            };\r\n          }\r\n          const lists = co.map((item) => {\r\n            return { name: item.name, value: item.value.confirmAdd };\r\n          });\r\n          this.option.series[0].data = lists;\r\n          console.log(this.option)\r\n          this.E = echart.init(this.$refs.echarts);\r\n          this.E.setOption(this.option);\r\n        });\r\n      } else {\r\n        jsonp(\r\n          \"http://interface.sina.cn/news/wap/fymap2020_data.d.json?_=1580892522427\",\r\n          (err, data) => {\r\n            \r\n            const lists = data.data.list.map((item) => {\r\n              return {\r\n                name: item.name,\r\n                value: item.value,\r\n              };\r\n            });\r\n            this.option.series[0].data = lists;\r\n            this.E = echart.init(this.$refs.echarts);\r\n            this.E.setOption(this.option);\r\n          }\r\n        );\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.echart {\r\n  width: 100%;\r\n  height: 600px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}