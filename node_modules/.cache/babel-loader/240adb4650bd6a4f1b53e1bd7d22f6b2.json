{"ast":null,"code":"var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","map":{"version":3,"names":["_config","require","__DEV__","echarts","zrUtil","graphic","_helper","setLabel","Model","barItemStyle","Path","BAR_BORDER_WIDTH_QUERY","extend","prototype","_default","extendChartView","type","render","seriesModel","ecModel","api","_updateDrawMode","coordinateSystemType","get","_isLargeDraw","_renderLarge","_renderNormal","group","incrementalPrepareRender","_clear","incrementalRender","params","_incrementalRenderLarge","isLargeDraw","pipelineContext","large","data","getData","oldData","_data","coord","coordinateSystem","baseAxis","getBaseAxis","isHorizontalOrRadial","isHorizontal","dim","animationModel","isAnimationEnabled","diff","add","dataIndex","hasValue","itemModel","getItemModel","layout","getLayout","el","elementCreator","setItemGraphicEl","updateStyle","update","newIndex","oldIndex","getItemGraphicEl","remove","updateProps","shape","removeRect","removeSector","execute","createLarge","dispose","noop","eachItemGraphicEl","removeAll","cartesian2d","isUpdate","rect","Rect","rectShape","animateProperty","animateTarget","polar","isRadial","clockwise","startAngle","endAngle","sector","Sector","defaults","sectorShape","style","text","width","parent","r","r0","getItemLayout","fixedLineWidth","getLineWidth","signX","signY","height","x","y","cx","cy","isPolar","color","getItemVisual","opacity","itemStyleModel","getModel","hoverStyle","getBarItemStyle","setShape","useStyle","fill","cursorStyle","getShallow","attr","labelPositionOutside","setHoverStyle","rawLayout","lineWidth","Math","min","abs","LargePath","points","buildPath","ctx","startPoint","__startPoint","valueIdx","__valueIdx","i","length","moveTo","lineTo","incremental","setLargeStyle","borderColor","getVisual","itemStyle","getItemStyle","stroke","module","exports"],"sources":["C:/Users/W/Desktop/vue_map/node_modules/echarts/lib/chart/bar/BarView.js"],"sourcesContent":["var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}