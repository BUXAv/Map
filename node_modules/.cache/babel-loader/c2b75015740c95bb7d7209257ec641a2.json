{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"names":["_default","ecModel","paletteScope","eachSeriesByType","seriesModel","categoriesData","getCategoriesData","data","getData","categoryNameIdxMap","each","idx","name","getName","itemModel","getItemModel","color","get","getColorFromPalette","setItemVisual","count","model","category","getShallow","getItemVisual","module","exports"],"sources":["C:/Users/W/Desktop/vue_map/node_modules/echarts/lib/chart/graph/categoryVisual.js"],"sourcesContent":["/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;EACzB,IAAIC,YAAY,GAAG,EAAnB;EACAD,OAAO,CAACE,gBAAR,CAAyB,OAAzB,EAAkC,UAAUC,WAAV,EAAuB;IACvD,IAAIC,cAAc,GAAGD,WAAW,CAACE,iBAAZ,EAArB;IACA,IAAIC,IAAI,GAAGH,WAAW,CAACI,OAAZ,EAAX;IACA,IAAIC,kBAAkB,GAAG,EAAzB;IACAJ,cAAc,CAACK,IAAf,CAAoB,UAAUC,GAAV,EAAe;MACjC,IAAIC,IAAI,GAAGP,cAAc,CAACQ,OAAf,CAAuBF,GAAvB,CAAX,CADiC,CACO;;MAExCF,kBAAkB,CAAC,QAAQG,IAAT,CAAlB,GAAmCD,GAAnC;MACA,IAAIG,SAAS,GAAGT,cAAc,CAACU,YAAf,CAA4BJ,GAA5B,CAAhB;MACA,IAAIK,KAAK,GAAGF,SAAS,CAACG,GAAV,CAAc,iBAAd,KAAoCb,WAAW,CAACc,mBAAZ,CAAgCN,IAAhC,EAAsCV,YAAtC,CAAhD;MACAG,cAAc,CAACc,aAAf,CAA6BR,GAA7B,EAAkC,OAAlC,EAA2CK,KAA3C;IACD,CAPD,EAJuD,CAWnD;;IAEJ,IAAIX,cAAc,CAACe,KAAf,EAAJ,EAA4B;MAC1Bb,IAAI,CAACG,IAAL,CAAU,UAAUC,GAAV,EAAe;QACvB,IAAIU,KAAK,GAAGd,IAAI,CAACQ,YAAL,CAAkBJ,GAAlB,CAAZ;QACA,IAAIW,QAAQ,GAAGD,KAAK,CAACE,UAAN,CAAiB,UAAjB,CAAf;;QAEA,IAAID,QAAQ,IAAI,IAAhB,EAAsB;UACpB,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;YAChCA,QAAQ,GAAGb,kBAAkB,CAAC,QAAQa,QAAT,CAA7B;UACD;;UAED,IAAI,CAACf,IAAI,CAACiB,aAAL,CAAmBb,GAAnB,EAAwB,OAAxB,EAAiC,IAAjC,CAAL,EAA6C;YAC3CJ,IAAI,CAACY,aAAL,CAAmBR,GAAnB,EAAwB,OAAxB,EAAiCN,cAAc,CAACmB,aAAf,CAA6BF,QAA7B,EAAuC,OAAvC,CAAjC;UACD;QACF;MACF,CAbD;IAcD;EACF,CA7BD;AA8BD;;AAEDG,MAAM,CAACC,OAAP,GAAiB1B,QAAjB"},"metadata":{},"sourceType":"script"}