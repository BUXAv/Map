{"ast":null,"code":"var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","map":{"version":3,"names":["_util","require","retrieve","defaults","extend","each","formatUtil","graphic","Model","_number","isRadianAroundZero","remRadian","_symbol","createSymbol","matrixUtil","_vector","v2ApplyTransform","applyTransform","PI","Math","makeAxisEventDataBase","axisModel","eventData","componentType","mainType","componentIndex","AxisBuilder","opt","labelOffset","nameDirection","tickDirection","labelDirection","silent","group","Group","dumbGroup","position","slice","rotation","updateTransform","_transform","transform","_dumbGroup","prototype","constructor","hasBuilder","name","builders","add","call","getGroup","axisLine","get","extent","axis","getExtent","matrix","pt1","pt2","lineStyle","lineCap","getModel","getLineStyle","Line","subPixelOptimizeLine","anid","shape","x1","y1","x2","y2","style","strokeContainThreshold","z2","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","rotate","offset","r","sqrt","point","index","symbol","stroke","pos","cos","sin","attr","axisTickLabel","tickEls","buildAxisTick","labelEls","buildAxisLabel","fixMinMaxLabelShow","axisName","nameLocation","textStyleModel","gap","gapSignal","isNameLocationCenter","labelLayout","nameRotation","axisNameAvailableWidth","innerTextLayout","endTextLayout","abs","isFinite","textFont","getFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","tooltipOpt","formatterParams","$vars","textEl","Text","__fullText","__truncatedText","isSilent","tooltip","show","content","formatter","setTextStyle","text","textFill","getTextColor","textAlign","textVerticalAlign","targetType","decomposeTransform","axisRotation","textRotation","direction","rotationDiff","textPosition","textRotate","inverse","onLeft","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","length","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","el","ignore","current","next","firstRect","getBoundingRect","clone","nextRect","mRotationBack","identity","mul","getLocalTransform","intersect","axisBuilder","scale","isBlank","tickModel","lineStyleModel","tickLen","ticksCoords","getTicksCoords","i","tickCoord","coord","tickEl","tickValue","push","axisLabelShow","labelModel","labelMargin","labels","getViewLabels","labelRotation","labelRotate","rawCategoryData","getCategories","triggerEvent","labelItem","formattedLabel","rawLabel","itemLabelModel","textStyle","ecModel","textColor","dataToCoord","getShallow","type","value","_default","module","exports"],"sources":["C:/Users/W/Desktop/vue_map/node_modules/echarts/lib/component/axis/AxisBuilder.js"],"sourcesContent":["var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}