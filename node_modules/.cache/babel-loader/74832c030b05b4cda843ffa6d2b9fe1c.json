{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","map":{"version":3,"names":["echarts","require","zrUtil","eventTool","lang","featureManager","dataViewLang","toolbox","dataView","BLOCK_SPLITER","Array","join","ITEM_SPLITER","groupSeries","ecModel","seriesGroupByCategoryAxis","otherSeries","meta","eachRawSeries","seriesModel","coordSys","coordinateSystem","type","baseAxis","getBaseAxis","key","dim","index","categoryAxis","valueAxis","getOtherAxis","series","push","axisDim","axisIndex","other","assembleSeriesWithCategoryAxis","tables","each","group","valueAxisDim","headers","concat","map","name","columns","model","getCategories","getRawData","mapArray","val","lines","i","length","items","j","assembleOtherSeries","data","vals","dimensions","argLen","arguments","dataIndex","getName","getContentFromModel","result","value","filter","str","replace","trim","isTSVFormat","block","firstLine","slice","indexOf","itemSplitRegex","RegExp","parseTSVContents","tsv","tsvLines","split","shift","categories","header","parseListContents","seriesName","hasName","isNaN","parseContents","blockMetaList","blocks","newOption","idx","blockMeta","axisKey","DataView","_dom","defaultOption","show","readOnly","optionToContent","contentToOption","icon","title","clone","backgroundColor","textColor","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","prototype","onclick","api","container","getDom","removeChild","root","document","createElement","style","cssText","get","innerHTML","color","viewMain","textarea","htmlOrDom","getOption","isDom","appendChild","borderColor","buttonContainer","buttonStyle","closeButton","refreshButton","self","close","addEventListener","e","Error","dispatchAction","keyCode","which","start","selectionStart","end","selectionEnd","substring","stop","height","clientHeight","remove","dispose","tryMergeDataOption","newData","originalData","newVal","original","isObject","isArray","defaults","register","registerAction","event","update","payload","newSeriesOptList","seriesOpt","getSeriesByName","extend","mergeOption","_default","module","exports"],"sources":["C:/Users/W/Desktop/vue_map/node_modules/echarts/lib/component/toolbox/feature/DataView.js"],"sourcesContent":["var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}