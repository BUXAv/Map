{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\n\n\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;","map":{"version":3,"names":["zrUtil","require","nest","keysFunction","sortKeysFunction","map","array","depth","length","i","n","keyFunction","mapObject","valuesByKey","keyValue","values","push","each","value","key","entriesMap","sortKeyFunction","sort","a","b","d","sortKeys","order","entries","module","exports"],"sources":["C:/Users/W/Desktop/vue_map/node_modules/echarts/lib/util/array/nest.js"],"sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACA,SAASC,IAAT,GAAgB;EACd,IAAIC,YAAY,GAAG,EAAnB;EACA,IAAIC,gBAAgB,GAAG,EAAvB;EACA;AACF;AACA;AACA;AACA;;EAEE,SAASC,GAAT,CAAaC,KAAb,EAAoBC,KAApB,EAA2B;IACzB,IAAIA,KAAK,IAAIJ,YAAY,CAACK,MAA1B,EAAkC;MAChC,OAAOF,KAAP;IACD;;IAED,IAAIG,CAAC,GAAG,CAAC,CAAT;IACA,IAAIC,CAAC,GAAGJ,KAAK,CAACE,MAAd;IACA,IAAIG,WAAW,GAAGR,YAAY,CAACI,KAAK,EAAN,CAA9B;IACA,IAAIK,SAAS,GAAG,EAAhB;IACA,IAAIC,WAAW,GAAG,EAAlB;;IAEA,OAAO,EAAEJ,CAAF,GAAMC,CAAb,EAAgB;MACd,IAAII,QAAQ,GAAGH,WAAW,CAACL,KAAK,CAACG,CAAD,CAAN,CAA1B;MACA,IAAIM,MAAM,GAAGF,WAAW,CAACC,QAAD,CAAxB;;MAEA,IAAIC,MAAJ,EAAY;QACVA,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACG,CAAD,CAAjB;MACD,CAFD,MAEO;QACLI,WAAW,CAACC,QAAD,CAAX,GAAwB,CAACR,KAAK,CAACG,CAAD,CAAN,CAAxB;MACD;IACF;;IAEDT,MAAM,CAACiB,IAAP,CAAYJ,WAAZ,EAAyB,UAAUK,KAAV,EAAiBC,GAAjB,EAAsB;MAC7CP,SAAS,CAACO,GAAD,CAAT,GAAiBd,GAAG,CAACa,KAAD,EAAQX,KAAR,CAApB;IACD,CAFD;IAGA,OAAOK,SAAP;EACD;EACD;AACF;AACA;AACA;AACA;;;EAGE,SAASQ,UAAT,CAAoBR,SAApB,EAA+BL,KAA/B,EAAsC;IACpC,IAAIA,KAAK,IAAIJ,YAAY,CAACK,MAA1B,EAAkC;MAChC,OAAOI,SAAP;IACD;;IAED,IAAIN,KAAK,GAAG,EAAZ;IACA,IAAIe,eAAe,GAAGjB,gBAAgB,CAACG,KAAK,EAAN,CAAtC;IACAP,MAAM,CAACiB,IAAP,CAAYL,SAAZ,EAAuB,UAAUM,KAAV,EAAiBC,GAAjB,EAAsB;MAC3Cb,KAAK,CAACU,IAAN,CAAW;QACTG,GAAG,EAAEA,GADI;QAETJ,MAAM,EAAEK,UAAU,CAACF,KAAD,EAAQX,KAAR;MAFT,CAAX;IAID,CALD;;IAOA,IAAIc,eAAJ,EAAqB;MACnB,OAAOf,KAAK,CAACgB,IAAN,CAAW,UAAUC,CAAV,EAAaC,CAAb,EAAgB;QAChC,OAAOH,eAAe,CAACE,CAAC,CAACJ,GAAH,EAAQK,CAAC,CAACL,GAAV,CAAtB;MACD,CAFM,CAAP;IAGD,CAJD,MAIO;MACL,OAAOb,KAAP;IACD;EACF;;EAED,OAAO;IACL;AACJ;AACA;AACA;AACA;IACIa,GAAG,EAAE,UAAUM,CAAV,EAAa;MAChBtB,YAAY,CAACa,IAAb,CAAkBS,CAAlB;MACA,OAAO,IAAP;IACD,CATI;;IAWL;AACJ;AACA;AACA;IACIC,QAAQ,EAAE,UAAUC,KAAV,EAAiB;MACzBvB,gBAAgB,CAACD,YAAY,CAACK,MAAb,GAAsB,CAAvB,CAAhB,GAA4CmB,KAA5C;MACA,OAAO,IAAP;IACD,CAlBI;;IAoBL;AACJ;AACA;AACA;IACIC,OAAO,EAAE,UAAUtB,KAAV,EAAiB;MACxB,OAAOc,UAAU,CAACf,GAAG,CAACC,KAAD,EAAQ,CAAR,CAAJ,EAAgB,CAAhB,CAAjB;IACD;EA1BI,CAAP;AA4BD;;AAEDuB,MAAM,CAACC,OAAP,GAAiB5B,IAAjB"},"metadata":{},"sourceType":"script"}