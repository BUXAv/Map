{"ast":null,"code":"var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","map":{"version":3,"names":["VisualMapping","require","zrColor","zrUtil","isArray","ITEM_STYLE_NORMAL","_default","seriesType","reset","seriesModel","ecModel","api","payload","tree","getData","root","seriesItemStyleModel","getModel","isRemoved","levelItemStyles","map","levelModels","levelModel","get","travelTree","getViewRoot","getAncestors","node","designatedVisual","viewRootAncestors","nodeModel","nodeLayout","getLayout","invisible","isInView","nodeItemStyleModel","levelItemStyle","depth","visuals","buildVisuals","borderColor","borderColorSaturation","thisNodeColor","calculateColor","calculateBorderColor","setVisual","viewChildren","length","mapping","buildVisualMapping","each","child","index","childVisual","mapVisual","extend","visualName","val","color","getValueVisualDefine","colorAlpha","colorSaturation","modifyHSL","modifyAlpha","name","value","rangeVisual","getRangeVisual","visualMin","visualMax","dataExtent","slice","colorMappingBy","opt","type","visual","range","mappingMethod","loop","__drColorMappingBy","childVisuals","mappingType","mapIdToIndex","getId","getValue","mapValueToVisual","module","exports"],"sources":["C:/Users/W/Desktop/vue_map/node_modules/echarts/lib/chart/treemap/treemapVisual.js"],"sourcesContent":["var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function (seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}