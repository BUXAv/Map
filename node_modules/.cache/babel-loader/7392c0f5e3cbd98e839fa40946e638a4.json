{"ast":null,"code":"var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n        new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n      }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n            target.style = {\n              opacity: 1\n            };\n          }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n        normalStyle.text = emphasisStyle.text = null;\n      }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n      element = new Ctor({\n        z: calculateZ(depth, z)\n      });\n      element.__tmDepth = depth;\n      element.__tmStorageName = storageName;\n      prepareAnimationWhenNoOld(lasts, element, storageName);\n    } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","map":{"version":3,"names":["echarts","require","zrUtil","graphic","DataDiffer","helper","Breadcrumb","RoamController","BoundingRect","matrix","animationUtil","makeStyleMapper","bind","Group","Rect","each","DRAG_THRESHOLD","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BASE","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","model","itemStyle","stroke","fill","lineWidth","_default","extendChartView","type","init","o","api","_containerGroup","_storage","createStorage","_oldTree","_breadcrumb","_controller","_state","render","seriesModel","ecModel","payload","models","findComponents","mainType","subType","query","indexOf","types","targetInfo","retrieveTargetInfo","payloadType","layoutInfo","isInit","thisStorage","reRoot","rootNodeGroup","nodeGroup","node","getRawIndex","direction","containerGroup","_giveContainerGroup","renderResult","_doRender","_doAnimation","renderFinally","_resetController","_renderBreadcrumb","_initEvents","group","add","attr","x","y","thisTree","getData","tree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","doRenderNode","curry","renderNode","dualTravel","root","willDeleteEls","clearStorage","thisViewChildren","oldViewChildren","parentGroup","sameTree","depth","child","index","isRemoved","processNode","getKey","update","remove","execute","getId","newIndex","oldIndex","thisNode","oldNode","viewChildren","storage","store","storageName","delEls","el","push","__tmWillDelete","els","parent","invisible","dirty","get","duration","easing","animationWrap","createWrap","rawIndex","target","shape","width","__tmNodeWidth","height","__tmNodeHeight","style","opacity","targetX","targetY","position","last","old","slice","extend","setShape","fadein","setStyle","done","start","controller","getZr","enable","on","_onPan","_onZoom","rect","getWidth","getHeight","setPointerChecker","e","contain","_clearController","dispose","dx","dy","Math","abs","rootLayout","getLayout","dispatchAction","from","uid","seriesId","id","rootRect","scale","mouseX","mouseY","m","create","translate","applyTransform","nodeClick","findTarget","offsetX","offsetY","isLeafRoot","_rootToNode","_zoomToNode","itemModel","hostTree","data","getItemModel","dataIndex","link","linkTarget","window","open","getViewRoot","onSelect","aboveViewRoot","removeAll","targetNode","viewRoot","eachNode","order","bgEl","background","point","transformCoordToLocal","content","thisLayout","isInView","thisWidth","thisHeight","borderWidth","thisInvisible","thisRawIndex","oldRawIndex","upperHeight","isParent","length","itemStyleNormalModel","getModel","itemStyleEmphasisModel","giveGraphic","isAboveViewRoot","bg","renderBackground","renderContent","useUpperLabel","seriesIndex","visualBorderColor","getVisual","emphasisBorderColor","updateStyle","normalStyle","emphasisStyle","upperLabelWidth","prepareText","text","setHoverStyle","contentWidth","max","contentHeight","culling","visualColor","element","cb","__tmWillVisible","upperLabelRect","nodeModel","retrieve","getFormattedLabel","iconChar","normalLabelModel","emphasisLabelModel","isShow","getShallow","setLabelStyle","defaultText","autoColor","isRectText","textRect","clone","truncate","outerWidth","outerHeight","minChar","Ctor","z","lasts","prepareAnimationWhenHasOld","calculateZ","__tmDepth","__tmStorageName","prepareAnimationWhenNoOld","lastCfg","parentNode","parentOldX","parentOldY","parentOldBg","zInLevel","zb","module","exports"],"sources":["C:/Users/W/Desktop/vue_map/node_modules/echarts/lib/chart/treemap/TreemapView.js"],"sourcesContent":["var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}