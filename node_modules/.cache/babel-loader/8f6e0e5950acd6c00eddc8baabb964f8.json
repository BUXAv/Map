{"ast":null,"code":"var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","map":{"version":3,"names":["_util","require","each","map","_number","linearMap","getPixelPrecision","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","calculateCategoryInterval","NORMALIZED_EXTENT","Axis","dim","scale","extent","_extent","inverse","onBand","prototype","constructor","contain","coord","min","Math","max","containData","data","dataToCoord","getExtent","slice","dataExtent","setExtent","start","end","clamp","normalize","type","fixExtentWithBands","count","coordToData","t","pointToData","point","getTicksCoords","opt","tickModel","getTickModel","result","ticks","ticksCoords","tickValue","alignWithLabel","get","fixOnBandTicksCoords","tickCategoryInterval","getViewLabels","labels","getLabelModel","model","getModel","getBandWidth","axisExtent","len","size","abs","isHorizontal","getRotate","nTick","margin","axis","ticksLen","length","last","shift","ticksItem","push","littleThan","unshift","pop","a","b","_default","module","exports"],"sources":["C:/Users/W/Desktop/vue_map/node_modules/echarts/lib/coord/Axis.js"],"sourcesContent":["var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}