{"ast":null,"code":"var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\n\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n  setNodePosition: function (dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // control if the node can move or not\n    draggable: true,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","map":{"version":3,"names":["SeriesModel","require","createGraphFromNodeEdge","_format","encodeHTML","SankeySeries","extend","type","layoutInfo","getInitialData","option","links","edges","nodes","data","graph","setNodePosition","dataIndex","localPosition","dataItem","localX","localY","getGraph","getData","getEdgeData","edgeData","formatTooltip","multipleSeries","dataType","params","getDataParams","rawDataOpt","html","source","target","value","superCall","defaultOption","zlevel","z","coordinateSystem","layout","left","top","right","bottom","nodeWidth","nodeGap","draggable","layoutIterations","label","show","position","color","fontSize","itemStyle","borderWidth","borderColor","lineStyle","opacity","curveness","emphasis","animationEasing","animationDuration","_default","module","exports"],"sources":["C:/Users/W/Desktop/vue_map/node_modules/echarts/lib/chart/sankey/SankeySeries.js"],"sourcesContent":["var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n  setNodePosition: function (dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // control if the node can move or not\n    draggable: true,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}