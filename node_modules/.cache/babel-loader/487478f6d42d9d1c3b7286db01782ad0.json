{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","RoamController","roamHelper","_cursorHelper","onIrrelevantElement","graphic","getFixedItemStyle","model","scale","itemStyle","getItemStyle","areaColor","get","fill","updateMapSelectHandler","mapDraw","mapOrGeoModel","group","api","fromView","off","on","_mouseDownFlag","e","el","target","__regions","parent","action","type","mainType","batch","map","region","name","from","uid","id","dispatchAction","updateMapSelected","eachChild","otherRegionEl","each","trigger","isSelected","MapDraw","updateGroup","Group","_controller","getZr","_controllerHost","_updateGroup","prototype","constructor","draw","ecModel","payload","isGeo","data","getData","eachComponent","subType","mapSeries","getHostGeoModel","geo","coordinateSystem","groupNewProp","position","childAt","attr","updateProps","removeAll","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","nameMap","createHashMap","regions","regionGroup","set","compoundPath","CompoundPath","shape","paths","add","regionModel","getRegionModel","itemStyleModel","getModel","hoverItemStyleModel","hoverItemStyle","labelModel","hoverLabelModel","dataIdx","indexOfName","visualColor","getItemVisual","geometries","geometry","push","Polygon","points","exterior","i","interiors","length","setStyle","style","strokeNoScale","culling","showLabel","hoverShowLabel","isDataNaN","isNaN","mapDimension","itemLayout","getItemLayout","query","labelFetcher","textEl","Text","center","slice","z2","silent","setLabelStyle","hoverStyle","labelDataIndex","defaultText","useInsideStyle","textAlign","textVerticalAlign","setItemGraphicEl","eventData","componentType","geoIndex","componentIndex","option","groupRegions","setHoverStyle","hoverSilentOnTouch","_updateController","remove","dispose","controller","controllerHost","zoomLimit","zoom","getZoom","enable","makeActionBase","dx","dy","updateViewOnPan","extend","mouseX","mouseY","updateViewOnZoom","originX","originY","traverse","setPointerChecker","x","y","getViewRectAfterRoam","contain","_default","module","exports"],"sources":["C:/Users/W/Desktop/vue_map/node_modules/echarts/lib/component/helper/MapDraw.js"],"sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAA5B;;AAEA,IAAIE,UAAU,GAAGF,OAAO,CAAC,mCAAD,CAAxB;;AAEA,IAAIG,aAAa,GAAGH,OAAO,CAAC,qCAAD,CAA3B;;AAEA,IAAII,mBAAmB,GAAGD,aAAa,CAACC,mBAAxC;;AAEA,IAAIC,OAAO,GAAGL,OAAO,CAAC,oBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,iBAAT,CAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC;EACvC,IAAIC,SAAS,GAAGF,KAAK,CAACG,YAAN,EAAhB;EACA,IAAIC,SAAS,GAAGJ,KAAK,CAACK,GAAN,CAAU,WAAV,CAAhB,CAFuC,CAEC;EACxC;;EAEA,IAAID,SAAS,IAAI,IAAjB,EAAuB;IACrBF,SAAS,CAACI,IAAV,GAAiBF,SAAjB;EACD;;EAED,OAAOF,SAAP;AACD;;AAED,SAASK,sBAAT,CAAgCC,OAAhC,EAAyCC,aAAzC,EAAwDC,KAAxD,EAA+DC,GAA/D,EAAoEC,QAApE,EAA8E;EAC5EF,KAAK,CAACG,GAAN,CAAU,OAAV;EACAH,KAAK,CAACG,GAAN,CAAU,WAAV;;EAEA,IAAIJ,aAAa,CAACJ,GAAd,CAAkB,cAAlB,CAAJ,EAAuC;IACrCK,KAAK,CAACI,EAAN,CAAS,WAAT,EAAsB,YAAY;MAChCN,OAAO,CAACO,cAAR,GAAyB,IAAzB;IACD,CAFD;IAGAL,KAAK,CAACI,EAAN,CAAS,OAAT,EAAkB,UAAUE,CAAV,EAAa;MAC7B,IAAI,CAACR,OAAO,CAACO,cAAb,EAA6B;QAC3B;MACD;;MAEDP,OAAO,CAACO,cAAR,GAAyB,KAAzB;MACA,IAAIE,EAAE,GAAGD,CAAC,CAACE,MAAX;;MAEA,OAAO,CAACD,EAAE,CAACE,SAAX,EAAsB;QACpBF,EAAE,GAAGA,EAAE,CAACG,MAAR;MACD;;MAED,IAAI,CAACH,EAAL,EAAS;QACP;MACD;;MAED,IAAII,MAAM,GAAG;QACXC,IAAI,EAAE,CAACb,aAAa,CAACc,QAAd,KAA2B,KAA3B,GAAmC,KAAnC,GAA2C,KAA5C,IAAqD,cADhD;QAEXC,KAAK,EAAEhC,MAAM,CAACiC,GAAP,CAAWR,EAAE,CAACE,SAAd,EAAyB,UAAUO,MAAV,EAAkB;UAChD,OAAO;YACLC,IAAI,EAAED,MAAM,CAACC,IADR;YAELC,IAAI,EAAEhB,QAAQ,CAACiB;UAFV,CAAP;QAID,CALM;MAFI,CAAb;MASAR,MAAM,CAACZ,aAAa,CAACc,QAAd,GAAyB,IAA1B,CAAN,GAAwCd,aAAa,CAACqB,EAAtD;MACAnB,GAAG,CAACoB,cAAJ,CAAmBV,MAAnB;MACAW,iBAAiB,CAACvB,aAAD,EAAgBC,KAAhB,CAAjB;IACD,CA5BD;EA6BD;AACF;;AAED,SAASsB,iBAAT,CAA2BvB,aAA3B,EAA0CC,KAA1C,EAAiD;EAC/C;EACAA,KAAK,CAACuB,SAAN,CAAgB,UAAUC,aAAV,EAAyB;IACvC1C,MAAM,CAAC2C,IAAP,CAAYD,aAAa,CAACf,SAA1B,EAAqC,UAAUO,MAAV,EAAkB;MACrDQ,aAAa,CAACE,OAAd,CAAsB3B,aAAa,CAAC4B,UAAd,CAAyBX,MAAM,CAACC,IAAhC,IAAwC,UAAxC,GAAqD,QAA3E;IACD,CAFD;EAGD,CAJD;AAKD;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAASW,OAAT,CAAiB3B,GAAjB,EAAsB4B,WAAtB,EAAmC;EACjC,IAAI7B,KAAK,GAAG,IAAIZ,OAAO,CAAC0C,KAAZ,EAAZ;EACA;AACF;AACA;AACA;;EAEE,KAAKC,WAAL,GAAmB,IAAI/C,cAAJ,CAAmBiB,GAAG,CAAC+B,KAAJ,EAAnB,CAAnB;EACA;AACF;AACA;AACA;;EAEE,KAAKC,eAAL,GAAuB;IACrBzB,MAAM,EAAEqB,WAAW,GAAG7B,KAAH,GAAW;EADT,CAAvB;EAGA;AACF;AACA;AACA;;EAEE,KAAKA,KAAL,GAAaA,KAAb;EACA;AACF;AACA;AACA;;EAEE,KAAKkC,YAAL,GAAoBL,WAApB;EACA;AACF;AACA;AACA;AACA;AACA;;EAEE,KAAKxB,cAAL;AACD;;AAEDuB,OAAO,CAACO,SAAR,GAAoB;EAClBC,WAAW,EAAER,OADK;EAElBS,IAAI,EAAE,UAAUtC,aAAV,EAAyBuC,OAAzB,EAAkCrC,GAAlC,EAAuCC,QAAvC,EAAiDqC,OAAjD,EAA0D;IAC9D,IAAIC,KAAK,GAAGzC,aAAa,CAACc,QAAd,KAA2B,KAAvC,CAD8D,CAChB;IAC9C;;IAEA,IAAI4B,IAAI,GAAG1C,aAAa,CAAC2C,OAAd,IAAyB3C,aAAa,CAAC2C,OAAd,EAApC;IACAF,KAAK,IAAIF,OAAO,CAACK,aAAR,CAAsB;MAC7B9B,QAAQ,EAAE,QADmB;MAE7B+B,OAAO,EAAE;IAFoB,CAAtB,EAGN,UAAUC,SAAV,EAAqB;MACtB,IAAI,CAACJ,IAAD,IAASI,SAAS,CAACC,eAAV,OAAgC/C,aAA7C,EAA4D;QAC1D0C,IAAI,GAAGI,SAAS,CAACH,OAAV,EAAP;MACD;IACF,CAPQ,CAAT;IAQA,IAAIK,GAAG,GAAGhD,aAAa,CAACiD,gBAAxB;IACA,IAAIhD,KAAK,GAAG,KAAKA,KAAjB;IACA,IAAIT,KAAK,GAAGwD,GAAG,CAACxD,KAAhB;IACA,IAAI0D,YAAY,GAAG;MACjBC,QAAQ,EAAEH,GAAG,CAACG,QADG;MAEjB3D,KAAK,EAAEA;IAFU,CAAnB,CAhB8D,CAmB3D;;IAEH,IAAI,CAACS,KAAK,CAACmD,OAAN,CAAc,CAAd,CAAD,IAAqBZ,OAAzB,EAAkC;MAChCvC,KAAK,CAACoD,IAAN,CAAWH,YAAX;IACD,CAFD,MAEO;MACL7D,OAAO,CAACiE,WAAR,CAAoBrD,KAApB,EAA2BiD,YAA3B,EAAyClD,aAAzC;IACD;;IAEDC,KAAK,CAACsD,SAAN;IACA,IAAIC,mBAAmB,GAAG,CAAC,WAAD,CAA1B;IACA,IAAIC,wBAAwB,GAAG,CAAC,UAAD,EAAa,WAAb,CAA/B;IACA,IAAIC,eAAe,GAAG,CAAC,OAAD,CAAtB;IACA,IAAIC,oBAAoB,GAAG,CAAC,UAAD,EAAa,OAAb,CAA3B;IACA,IAAIC,OAAO,GAAG7E,MAAM,CAAC8E,aAAP,EAAd;IACA9E,MAAM,CAAC2C,IAAP,CAAYsB,GAAG,CAACc,OAAhB,EAAyB,UAAU7C,MAAV,EAAkB;MACzC;MACA;MACA;MACA;MACA;MACA,IAAI8C,WAAW,GAAGH,OAAO,CAAChE,GAAR,CAAYqB,MAAM,CAACC,IAAnB,KAA4B0C,OAAO,CAACI,GAAR,CAAY/C,MAAM,CAACC,IAAnB,EAAyB,IAAI7B,OAAO,CAAC0C,KAAZ,EAAzB,CAA9C;MACA,IAAIkC,YAAY,GAAG,IAAI5E,OAAO,CAAC6E,YAAZ,CAAyB;QAC1CC,KAAK,EAAE;UACLC,KAAK,EAAE;QADF;MADmC,CAAzB,CAAnB;MAKAL,WAAW,CAACM,GAAZ,CAAgBJ,YAAhB;MACA,IAAIK,WAAW,GAAGtE,aAAa,CAACuE,cAAd,CAA6BtD,MAAM,CAACC,IAApC,KAA6ClB,aAA/D;MACA,IAAIwE,cAAc,GAAGF,WAAW,CAACG,QAAZ,CAAqBjB,mBAArB,CAArB;MACA,IAAIkB,mBAAmB,GAAGJ,WAAW,CAACG,QAAZ,CAAqBhB,wBAArB,CAA1B;MACA,IAAIhE,SAAS,GAAGH,iBAAiB,CAACkF,cAAD,EAAiBhF,KAAjB,CAAjC;MACA,IAAImF,cAAc,GAAGrF,iBAAiB,CAACoF,mBAAD,EAAsBlF,KAAtB,CAAtC;MACA,IAAIoF,UAAU,GAAGN,WAAW,CAACG,QAAZ,CAAqBf,eAArB,CAAjB;MACA,IAAImB,eAAe,GAAGP,WAAW,CAACG,QAAZ,CAAqBd,oBAArB,CAAtB;MACA,IAAImB,OAAJ,CApByC,CAoB5B;;MAEb,IAAIpC,IAAJ,EAAU;QACRoC,OAAO,GAAGpC,IAAI,CAACqC,WAAL,CAAiB9D,MAAM,CAACC,IAAxB,CAAV,CADQ,CACiC;QACzC;QACA;QACA;;QAEA,IAAI8D,WAAW,GAAGtC,IAAI,CAACuC,aAAL,CAAmBH,OAAnB,EAA4B,OAA5B,EAAqC,IAArC,CAAlB;;QAEA,IAAIE,WAAJ,EAAiB;UACfvF,SAAS,CAACI,IAAV,GAAiBmF,WAAjB;QACD;MACF;;MAEDjG,MAAM,CAAC2C,IAAP,CAAYT,MAAM,CAACiE,UAAnB,EAA+B,UAAUC,QAAV,EAAoB;QACjD,IAAIA,QAAQ,CAACtE,IAAT,KAAkB,SAAtB,EAAiC;UAC/B;QACD;;QAEDoD,YAAY,CAACE,KAAb,CAAmBC,KAAnB,CAAyBgB,IAAzB,CAA8B,IAAI/F,OAAO,CAACgG,OAAZ,CAAoB;UAChDlB,KAAK,EAAE;YACLmB,MAAM,EAAEH,QAAQ,CAACI;UADZ;QADyC,CAApB,CAA9B;;QAMA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,QAAQ,CAACM,SAAT,GAAqBN,QAAQ,CAACM,SAAT,CAAmBC,MAAxC,GAAiD,CAArD,CAAjB,EAA0EF,CAAC,EAA3E,EAA+E;UAC7EvB,YAAY,CAACE,KAAb,CAAmBC,KAAnB,CAAyBgB,IAAzB,CAA8B,IAAI/F,OAAO,CAACgG,OAAZ,CAAoB;YAChDlB,KAAK,EAAE;cACLmB,MAAM,EAAEH,QAAQ,CAACM,SAAT,CAAmBD,CAAnB;YADH;UADyC,CAApB,CAA9B;QAKD;MACF,CAlBD;MAmBAvB,YAAY,CAAC0B,QAAb,CAAsBlG,SAAtB;MACAwE,YAAY,CAAC2B,KAAb,CAAmBC,aAAnB,GAAmC,IAAnC;MACA5B,YAAY,CAAC6B,OAAb,GAAuB,IAAvB,CAxDyC,CAwDZ;;MAE7B,IAAIC,SAAS,GAAGnB,UAAU,CAAChF,GAAX,CAAe,MAAf,CAAhB;MACA,IAAIoG,cAAc,GAAGnB,eAAe,CAACjF,GAAhB,CAAoB,MAApB,CAArB;MACA,IAAIqG,SAAS,GAAGvD,IAAI,IAAIwD,KAAK,CAACxD,IAAI,CAAC9C,GAAL,CAAS8C,IAAI,CAACyD,YAAL,CAAkB,OAAlB,CAAT,EAAqCrB,OAArC,CAAD,CAA7B;MACA,IAAIsB,UAAU,GAAG1D,IAAI,IAAIA,IAAI,CAAC2D,aAAL,CAAmBvB,OAAnB,CAAzB,CA7DyC,CA6Da;MACtD;MACA;MACA;;MAEA,IAAIrC,KAAK,IAAIwD,SAAS,KAAKF,SAAS,IAAIC,cAAlB,CAAlB,IAAuDI,UAAU,IAAIA,UAAU,CAACL,SAApF,EAA+F;QAC7F,IAAIO,KAAK,GAAG,CAAC7D,KAAD,GAASqC,OAAT,GAAmB7D,MAAM,CAACC,IAAtC;QACA,IAAIqF,YAAJ,CAF6F,CAE3E;;QAElB,IAAI,CAAC7D,IAAD,IAASoC,OAAO,IAAI,CAAxB,EAA2B;UACzByB,YAAY,GAAGvG,aAAf;QACD;;QAED,IAAIwG,MAAM,GAAG,IAAInH,OAAO,CAACoH,IAAZ,CAAiB;UAC5BtD,QAAQ,EAAElC,MAAM,CAACyF,MAAP,CAAcC,KAAd,EADkB;UAE5BnH,KAAK,EAAE,CAAC,IAAIA,KAAK,CAAC,CAAD,CAAV,EAAe,IAAIA,KAAK,CAAC,CAAD,CAAxB,CAFqB;UAG5BoH,EAAE,EAAE,EAHwB;UAI5BC,MAAM,EAAE;QAJoB,CAAjB,CAAb;QAMAxH,OAAO,CAACyH,aAAR,CAAsBN,MAAM,CAACZ,KAA7B,EAAoCY,MAAM,CAACO,UAAP,GAAoB,EAAxD,EAA4DnC,UAA5D,EAAwEC,eAAxE,EAAyF;UACvF0B,YAAY,EAAEA,YADyE;UAEvFS,cAAc,EAAEV,KAFuE;UAGvFW,WAAW,EAAEhG,MAAM,CAACC,IAHmE;UAIvFgG,cAAc,EAAE;QAJuE,CAAzF,EAKG;UACDC,SAAS,EAAE,QADV;UAEDC,iBAAiB,EAAE;QAFlB,CALH;QASArD,WAAW,CAACM,GAAZ,CAAgBmC,MAAhB;MACD,CA1FwC,CA0FvC;MACF;;;MAGA,IAAI9D,IAAJ,EAAU;QACRA,IAAI,CAAC2E,gBAAL,CAAsBvC,OAAtB,EAA+Bf,WAA/B;MACD,CAFD,MAEO;QACL,IAAIO,WAAW,GAAGtE,aAAa,CAACuE,cAAd,CAA6BtD,MAAM,CAACC,IAApC,CAAlB,CADK,CACwD;;QAE7D+C,YAAY,CAACqD,SAAb,GAAyB;UACvBC,aAAa,EAAE,KADQ;UAEvBC,QAAQ,EAAExH,aAAa,CAACyH,cAFD;UAGvBvG,IAAI,EAAED,MAAM,CAACC,IAHU;UAIvBD,MAAM,EAAEqD,WAAW,IAAIA,WAAW,CAACoD,MAA3B,IAAqC;QAJtB,CAAzB;MAMD;;MAED,IAAIC,YAAY,GAAG5D,WAAW,CAACrD,SAAZ,KAA0BqD,WAAW,CAACrD,SAAZ,GAAwB,EAAlD,CAAnB;MACAiH,YAAY,CAACvC,IAAb,CAAkBnE,MAAlB;MACA5B,OAAO,CAACuI,aAAR,CAAsB7D,WAAtB,EAAmCY,cAAnC,EAAmD;QACjDkD,kBAAkB,EAAE,CAAC,CAAC7H,aAAa,CAACJ,GAAd,CAAkB,cAAlB;MAD2B,CAAnD;MAGAK,KAAK,CAACoE,GAAN,CAAUN,WAAV;IACD,CAjHD;;IAmHA,KAAK+D,iBAAL,CAAuB9H,aAAvB,EAAsCuC,OAAtC,EAA+CrC,GAA/C;;IAEAJ,sBAAsB,CAAC,IAAD,EAAOE,aAAP,EAAsBC,KAAtB,EAA6BC,GAA7B,EAAkCC,QAAlC,CAAtB;IACAoB,iBAAiB,CAACvB,aAAD,EAAgBC,KAAhB,CAAjB;EACD,CA1JiB;EA2JlB8H,MAAM,EAAE,YAAY;IAClB,KAAK9H,KAAL,CAAWsD,SAAX;;IAEA,KAAKvB,WAAL,CAAiBgG,OAAjB;;IAEA,KAAK9F,eAAL,GAAuB,EAAvB;EACD,CAjKiB;EAkKlB4F,iBAAiB,EAAE,UAAU9H,aAAV,EAAyBuC,OAAzB,EAAkCrC,GAAlC,EAAuC;IACxD,IAAI8C,GAAG,GAAGhD,aAAa,CAACiD,gBAAxB;IACA,IAAIgF,UAAU,GAAG,KAAKjG,WAAtB;IACA,IAAIkG,cAAc,GAAG,KAAKhG,eAA1B;IACAgG,cAAc,CAACC,SAAf,GAA2BnI,aAAa,CAACJ,GAAd,CAAkB,YAAlB,CAA3B;IACAsI,cAAc,CAACE,IAAf,GAAsBpF,GAAG,CAACqF,OAAJ,EAAtB,CALwD,CAKnB;;IAErCJ,UAAU,CAACK,MAAX,CAAkBtI,aAAa,CAACJ,GAAd,CAAkB,MAAlB,KAA6B,KAA/C;IACA,IAAIkB,QAAQ,GAAGd,aAAa,CAACc,QAA7B;;IAEA,SAASyH,cAAT,GAA0B;MACxB,IAAI3H,MAAM,GAAG;QACXC,IAAI,EAAE,SADK;QAEX0G,aAAa,EAAEzG;MAFJ,CAAb;MAIAF,MAAM,CAACE,QAAQ,GAAG,IAAZ,CAAN,GAA0Bd,aAAa,CAACqB,EAAxC;MACA,OAAOT,MAAP;IACD;;IAEDqH,UAAU,CAAC7H,GAAX,CAAe,KAAf,EAAsBC,EAAtB,CAAyB,KAAzB,EAAgC,UAAUmI,EAAV,EAAcC,EAAd,EAAkB;MAChD,KAAKnI,cAAL,GAAsB,KAAtB;MACApB,UAAU,CAACwJ,eAAX,CAA2BR,cAA3B,EAA2CM,EAA3C,EAA+CC,EAA/C;MACAvI,GAAG,CAACoB,cAAJ,CAAmBvC,MAAM,CAAC4J,MAAP,CAAcJ,cAAc,EAA5B,EAAgC;QACjDC,EAAE,EAAEA,EAD6C;QAEjDC,EAAE,EAAEA;MAF6C,CAAhC,CAAnB;IAID,CAPD,EAOG,IAPH;IAQAR,UAAU,CAAC7H,GAAX,CAAe,MAAf,EAAuBC,EAAvB,CAA0B,MAA1B,EAAkC,UAAU+H,IAAV,EAAgBQ,MAAhB,EAAwBC,MAAxB,EAAgC;MAChE,KAAKvI,cAAL,GAAsB,KAAtB;MACApB,UAAU,CAAC4J,gBAAX,CAA4BZ,cAA5B,EAA4CE,IAA5C,EAAkDQ,MAAlD,EAA0DC,MAA1D;MACA3I,GAAG,CAACoB,cAAJ,CAAmBvC,MAAM,CAAC4J,MAAP,CAAcJ,cAAc,EAA5B,EAAgC;QACjDH,IAAI,EAAEA,IAD2C;QAEjDW,OAAO,EAAEH,MAFwC;QAGjDI,OAAO,EAAEH;MAHwC,CAAhC,CAAnB;;MAMA,IAAI,KAAK1G,YAAT,EAAuB;QACrB,IAAIlC,KAAK,GAAG,KAAKA,KAAjB;QACA,IAAIT,KAAK,GAAGS,KAAK,CAACT,KAAlB;QACAS,KAAK,CAACgJ,QAAN,CAAe,UAAUzI,EAAV,EAAc;UAC3B,IAAIA,EAAE,CAACK,IAAH,KAAY,MAAhB,EAAwB;YACtBL,EAAE,CAAC6C,IAAH,CAAQ,OAAR,EAAiB,CAAC,IAAI7D,KAAK,CAAC,CAAD,CAAV,EAAe,IAAIA,KAAK,CAAC,CAAD,CAAxB,CAAjB;UACD;QACF,CAJD;MAKD;IACF,CAlBD,EAkBG,IAlBH;IAmBAyI,UAAU,CAACiB,iBAAX,CAA6B,UAAU3I,CAAV,EAAa4I,CAAb,EAAgBC,CAAhB,EAAmB;MAC9C,OAAOpG,GAAG,CAACqG,oBAAJ,GAA2BC,OAA3B,CAAmCH,CAAnC,EAAsCC,CAAtC,KAA4C,CAAChK,mBAAmB,CAACmB,CAAD,EAAIL,GAAJ,EAASF,aAAT,CAAvE;IACD,CAFD;EAGD;AAnNiB,CAApB;AAqNA,IAAIuJ,QAAQ,GAAG1H,OAAf;AACA2H,MAAM,CAACC,OAAP,GAAiBF,QAAjB"},"metadata":{},"sourceType":"script"}