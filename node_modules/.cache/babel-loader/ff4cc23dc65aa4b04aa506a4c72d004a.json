{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","map":{"version":3,"names":["zrUtil","require","retrieveTargetInfo","payload","validPayloadTypes","seriesModel","indexOf","type","root","getData","tree","targetNode","contains","node","targetNodeId","getNodeById","getPathToRoot","path","parentNode","push","reverse","aboveViewRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","dataIndex","name","value","getRawValue","exports"],"sources":["C:/Users/W/Desktop/vue_map/node_modules/echarts/lib/chart/helper/treeHelper.js"],"sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,kBAAT,CAA4BC,OAA5B,EAAqCC,iBAArC,EAAwDC,WAAxD,EAAqE;EACnE,IAAIF,OAAO,IAAIH,MAAM,CAACM,OAAP,CAAeF,iBAAf,EAAkCD,OAAO,CAACI,IAA1C,KAAmD,CAAlE,EAAqE;IACnE,IAAIC,IAAI,GAAGH,WAAW,CAACI,OAAZ,GAAsBC,IAAtB,CAA2BF,IAAtC;IACA,IAAIG,UAAU,GAAGR,OAAO,CAACQ,UAAzB;;IAEA,IAAIA,UAAU,IAAIH,IAAI,CAACI,QAAL,CAAcD,UAAd,CAAlB,EAA6C;MAC3C,OAAO;QACLE,IAAI,EAAEF;MADD,CAAP;IAGD;;IAED,IAAIG,YAAY,GAAGX,OAAO,CAACW,YAA3B;;IAEA,IAAIA,YAAY,IAAI,IAAhB,KAAyBH,UAAU,GAAGH,IAAI,CAACO,WAAL,CAAiBD,YAAjB,CAAtC,CAAJ,EAA2E;MACzE,OAAO;QACLD,IAAI,EAAEF;MADD,CAAP;IAGD;EACF;AACF,C,CAAC;;;AAGF,SAASK,aAAT,CAAuBH,IAAvB,EAA6B;EAC3B,IAAII,IAAI,GAAG,EAAX;;EAEA,OAAOJ,IAAP,EAAa;IACXA,IAAI,GAAGA,IAAI,CAACK,UAAZ;IACAL,IAAI,IAAII,IAAI,CAACE,IAAL,CAAUN,IAAV,CAAR;EACD;;EAED,OAAOI,IAAI,CAACG,OAAL,EAAP;AACD;;AAED,SAASC,aAAT,CAAuBC,QAAvB,EAAiCT,IAAjC,EAAuC;EACrC,IAAIU,QAAQ,GAAGP,aAAa,CAACM,QAAD,CAA5B;EACA,OAAOtB,MAAM,CAACM,OAAP,CAAeiB,QAAf,EAAyBV,IAAzB,KAAkC,CAAzC;AACD,C,CAAC;;;AAGF,SAASW,gBAAT,CAA0BX,IAA1B,EAAgCR,WAAhC,EAA6C;EAC3C,IAAIoB,YAAY,GAAG,EAAnB;;EAEA,OAAOZ,IAAP,EAAa;IACX,IAAIa,aAAa,GAAGb,IAAI,CAACc,SAAzB;IACAF,YAAY,CAACN,IAAb,CAAkB;MAChBS,IAAI,EAAEf,IAAI,CAACe,IADK;MAEhBD,SAAS,EAAED,aAFK;MAGhBG,KAAK,EAAExB,WAAW,CAACyB,WAAZ,CAAwBJ,aAAxB;IAHS,CAAlB;IAKAb,IAAI,GAAGA,IAAI,CAACK,UAAZ;EACD;;EAEDO,YAAY,CAACL,OAAb;EACA,OAAOK,YAAP;AACD;;AAEDM,OAAO,CAAC7B,kBAAR,GAA6BA,kBAA7B;AACA6B,OAAO,CAACf,aAAR,GAAwBA,aAAxB;AACAe,OAAO,CAACV,aAAR,GAAwBA,aAAxB;AACAU,OAAO,CAACP,gBAAR,GAA2BA,gBAA3B"},"metadata":{},"sourceType":"script"}