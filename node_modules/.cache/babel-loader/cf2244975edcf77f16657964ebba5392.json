{"ast":null,"code":"var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var isLargeRender = seriesModel.pipelineContext.large;\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    return !isLargeRender && {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;","map":{"version":3,"names":["createRenderPlanner","require","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","_default","seriesType","plan","performRawSeries","reset","seriesModel","ecModel","data","getData","isLargeRender","pipelineContext","large","setVisual","legendSymbol","colorP","getColor","colorN","borderColorP","getBorderColor","borderColorN","isSeriesFiltered","progress","params","dataIndex","next","itemModel","getItemModel","sign","getItemLayout","setItemVisual","color","borderColor","model","get","module","exports"],"sources":["C:/Users/W/Desktop/vue_map/node_modules/echarts/lib/chart/candlestick/candlestickVisual.js"],"sourcesContent":["var createRenderPlanner = require(\"../helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'color'];\nvar negativeColorQuery = ['itemStyle', 'color0'];\nvar _default = {\n  seriesType: 'candlestick',\n  plan: createRenderPlanner(),\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var isLargeRender = seriesModel.pipelineContext.large;\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      colorP: getColor(1, seriesModel),\n      colorN: getColor(-1, seriesModel),\n      borderColorP: getBorderColor(1, seriesModel),\n      borderColorN: getBorderColor(-1, seriesModel)\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    return !isLargeRender && {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var dataIndex;\n\n      while ((dataIndex = params.next()) != null) {\n        var itemModel = data.getItemModel(dataIndex);\n        var sign = data.getItemLayout(dataIndex).sign;\n        data.setItemVisual(dataIndex, {\n          color: getColor(sign, itemModel),\n          borderColor: getBorderColor(sign, itemModel)\n        });\n      }\n    }\n\n    function getColor(sign, model) {\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\n    }\n\n    function getBorderColor(sign, model) {\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\n    }\n  }\n};\nmodule.exports = _default;"],"mappings":"AAAA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,+BAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,wBAAwB,GAAG,CAAC,WAAD,EAAc,aAAd,CAA/B;AACA,IAAIC,wBAAwB,GAAG,CAAC,WAAD,EAAc,cAAd,CAA/B;AACA,IAAIC,kBAAkB,GAAG,CAAC,WAAD,EAAc,OAAd,CAAzB;AACA,IAAIC,kBAAkB,GAAG,CAAC,WAAD,EAAc,QAAd,CAAzB;AACA,IAAIC,QAAQ,GAAG;EACbC,UAAU,EAAE,aADC;EAEbC,IAAI,EAAER,mBAAmB,EAFZ;EAGb;EACAS,gBAAgB,EAAE,IAJL;EAKbC,KAAK,EAAE,UAAUC,WAAV,EAAuBC,OAAvB,EAAgC;IACrC,IAAIC,IAAI,GAAGF,WAAW,CAACG,OAAZ,EAAX;IACA,IAAIC,aAAa,GAAGJ,WAAW,CAACK,eAAZ,CAA4BC,KAAhD;IACAJ,IAAI,CAACK,SAAL,CAAe;MACbC,YAAY,EAAE,WADD;MAEbC,MAAM,EAAEC,QAAQ,CAAC,CAAD,EAAIV,WAAJ,CAFH;MAGbW,MAAM,EAAED,QAAQ,CAAC,CAAC,CAAF,EAAKV,WAAL,CAHH;MAIbY,YAAY,EAAEC,cAAc,CAAC,CAAD,EAAIb,WAAJ,CAJf;MAKbc,YAAY,EAAED,cAAc,CAAC,CAAC,CAAF,EAAKb,WAAL;IALf,CAAf,EAHqC,CASjC;;IAEJ,IAAIC,OAAO,CAACc,gBAAR,CAAyBf,WAAzB,CAAJ,EAA2C;MACzC;IACD;;IAED,OAAO,CAACI,aAAD,IAAkB;MACvBY,QAAQ,EAAEA;IADa,CAAzB;;IAIA,SAASA,QAAT,CAAkBC,MAAlB,EAA0Bf,IAA1B,EAAgC;MAC9B,IAAIgB,SAAJ;;MAEA,OAAO,CAACA,SAAS,GAAGD,MAAM,CAACE,IAAP,EAAb,KAA+B,IAAtC,EAA4C;QAC1C,IAAIC,SAAS,GAAGlB,IAAI,CAACmB,YAAL,CAAkBH,SAAlB,CAAhB;QACA,IAAII,IAAI,GAAGpB,IAAI,CAACqB,aAAL,CAAmBL,SAAnB,EAA8BI,IAAzC;QACApB,IAAI,CAACsB,aAAL,CAAmBN,SAAnB,EAA8B;UAC5BO,KAAK,EAAEf,QAAQ,CAACY,IAAD,EAAOF,SAAP,CADa;UAE5BM,WAAW,EAAEb,cAAc,CAACS,IAAD,EAAOF,SAAP;QAFC,CAA9B;MAID;IACF;;IAED,SAASV,QAAT,CAAkBY,IAAlB,EAAwBK,KAAxB,EAA+B;MAC7B,OAAOA,KAAK,CAACC,GAAN,CAAUN,IAAI,GAAG,CAAP,GAAW7B,kBAAX,GAAgCC,kBAA1C,CAAP;IACD;;IAED,SAASmB,cAAT,CAAwBS,IAAxB,EAA8BK,KAA9B,EAAqC;MACnC,OAAOA,KAAK,CAACC,GAAN,CAAUN,IAAI,GAAG,CAAP,GAAW/B,wBAAX,GAAsCC,wBAAhD,CAAP;IACD;EACF;AA5CY,CAAf;AA8CAqC,MAAM,CAACC,OAAP,GAAiBnC,QAAjB"},"metadata":{},"sourceType":"script"}